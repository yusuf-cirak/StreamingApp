# @format

name: Push to Deploy

on:
  push:
    branches:
      - master

jobs:
  check-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if frontend folder changed
        id: checkout_code
        run: |
          if git diff --name-only 'HEAD^' HEAD | grep -q '^frontend/'; then
            echo "Frontend has changes. Setting buildPushFrontend to true"
            echo "buildPushFrontend=true" > $GITHUB_ENV
          else
            echo "Frontend has no changes. Setting buildPushFrontend to false"
            echo "buildPushFrontend=false" > $GITHUB_ENV
          fi

  build-and-push:
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ contains(github.event.head_commit.modified, 'frontend/') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/streaming-app-frontend:latest

  release:
    concurrency:
      group: ${{ github.ref }}
    runs-on: ubuntu-latest
    needs: check-changes
    steps:
      - name: Deploy Streaming App
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            if [[ "${{ contains(github.event.head_commit.modified, 'frontend/') }}" == "true" ]]; then
              echo "Frontend has changes. Removing the current image..."
              docker image remove yusufcirak/streaming-app-frontend --force
            fi

            rm -rf streaming-app
            git clone https://github.com/yusuf-cirak/StreamingApp.git streaming-app
            cd streaming-app/backend/src/WebAPI
            appsettings_prod_json=$(echo ${{ secrets.APPSETTINGS_JSON }} | base64 --decode)
            echo "$appsettings_prod_json" > appsettings.Production.json
            cd ../../..
            export ASPNETCORE_ENVIRONMENT="Production"
            export STREAM_API_KEY="${{ secrets.STREAM_API_KEY }}"
            export POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
            export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
            bash start.sh
